{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SC298\\\\WebstormProjects\\\\react_lab\\\\src\\\\DashBoard.js\";\nimport React, { Component } from \"react\";\n\nclass DashBoard extends Component {\n  componentDidMount() {\n    const cors_api_url = 'https://cors-anywhere.herokuapp.com/';\n    fetch(cors_api_url + \"https://www.metaweather.com/api/location/924938/\", {\n      method: 'GET'\n    }).then(result => result.json()).then(data => {\n      alert(data.consolidated_weather);\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const listPlayers = this.state.players.map(player => {\n      // Note the this.state, this is important for React to see changes in the data and thus rerender the Component\n      React.createElement(Counter, {\n        removePlayer: this.removePlayer.bind(this) //bind this to stay in the context of the parent component\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, listPlayers);\n    return React.createElement(\"div\", {\n      className: \"my_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n} // function Day(props) {\n//     return (\n//         <div className=\"card\" style=\"width: 18rem;\">\n//             <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\n//                 <div className=\"card-body\">\n//                     <h5 className=\"card-title\">Card title</h5>\n//                     <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of\n//                         the card's content.</p>\n//                     <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n//                 </div>\n//         </div>\n//     )\n//\n// }\n\n\nexport default DashBoard;","map":{"version":3,"sources":["C:\\Users\\SC298\\WebstormProjects\\react_lab\\src\\DashBoard.js"],"names":["React","Component","DashBoard","componentDidMount","cors_api_url","fetch","method","then","result","json","data","alert","consolidated_weather","catch","error","console","log","render","listPlayers","state","players","map","player","removePlayer","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC9BE,EAAAA,iBAAiB,GAAG;AAGhB,UAAMC,YAAY,GAAG,sCAArB;AACAC,IAAAA,KAAK,CAACD,YAAY,GAAG,kDAAhB,EAAoE;AACrEE,MAAAA,MAAM,EAAE;AAD6D,KAApE,CAAL,CAIKC,IAJL,CAIUC,MAAM,IAAIA,MAAM,CAACC,IAAP,EAJpB,EAKKF,IALL,CAKUG,IAAI,IAAI;AACVC,MAAAA,KAAK,CAACD,IAAI,CAACE,oBAAN,CAAL;AAEH,KARL,EASKC,KATL,CASYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CATtB;AAUH;;AAIDG,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,IAAI;AAAE;AACnD,0BAAC,OAAD;AAEA,QAAA,YAAY,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAFd,CAE4C;AAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIH,KALmB,CAApB;AAOA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,WADL,CADJ;AAKA,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AArC6B,C,CAwClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,eAAehB,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass DashBoard extends Component {\r\n    componentDidMount() {\r\n\r\n\r\n        const cors_api_url = 'https://cors-anywhere.herokuapp.com/';\r\n        fetch(cors_api_url + \"https://www.metaweather.com/api/location/924938/\", {\r\n            method: 'GET',\r\n\r\n            })\r\n            .then(result => result.json())\r\n            .then(data => {\r\n                alert(data.consolidated_weather);\r\n\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const listPlayers = this.state.players.map(player => { // Note the this.state, this is important for React to see changes in the data and thus rerender the Component\r\n            <Counter\r\n\r\n            removePlayer={this.removePlayer.bind(this)} //bind this to stay in the context of the parent component\r\n            />\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {listPlayers}\r\n            </div>\r\n        );\r\n        return (\r\n            <div className=\"my_container\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// function Day(props) {\r\n//     return (\r\n//         <div className=\"card\" style=\"width: 18rem;\">\r\n//             <img src=\"...\" className=\"card-img-top\" alt=\"...\" />\r\n//                 <div className=\"card-body\">\r\n//                     <h5 className=\"card-title\">Card title</h5>\r\n//                     <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of\r\n//                         the card's content.</p>\r\n//                     <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\r\n//                 </div>\r\n//         </div>\r\n//     )\r\n//\r\n// }\r\n\r\n\r\n\r\nexport default DashBoard;"]},"metadata":{},"sourceType":"module"}