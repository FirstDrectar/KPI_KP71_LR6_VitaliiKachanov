{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SC298\\\\WebstormProjects\\\\react_lab\\\\src\\\\LoginForm.js\";\nimport React, { Component } from \"react\";\nlet users = new Map();\nusers.set(\"Danya2\", \"012340\");\nusers.set(\"Vlad4\", '012340');\nusers.set(\"Yaroslav6\", '012340');\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handle_submit = event => {\n      event.preventDefault();\n\n      if (!isNaN(parseInt(this.state.name.slice(-1))) && /^[a-zA-Z][a-zA-Z\\s]*$/.test(this.state.name.substring(0, this.state.name.length - 1)) && my_map.get(this.state.name)) {\n        this.props.history.push(\"/dashboard\");\n      } else {\n        document.getElementById(\"password\").style.borderColor = \"red\";\n        document.getElementById(\"login\").style.borderColor = \"red\";\n        document.getElementById(\"error\").innerHTML = \"Error. Your password or login is incorrect\";\n      }\n    };\n\n    this.state = {\n      name: '',\n      password: \"\",\n      users\n    };\n    this.name_change = this.name_change.bind(this);\n    this.password_change = this.password_change.bind(this);\n    this.handle_submit = this.handle_submit.bind(this);\n  }\n\n  name_change(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  password_change(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handle_submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      value: this.state.name,\n      onChange: this.name_change,\n      type: \"text\",\n      className: \"form-control\",\n      id: \"login\",\n      placeholder: \"Enter login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: this.password_change,\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      id: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:\\Users\\SC298\\WebstormProjects\\react_lab\\src\\LoginForm.js"],"names":["React","Component","users","Map","set","LoginForm","constructor","props","handle_submit","event","preventDefault","isNaN","parseInt","state","name","slice","test","substring","length","my_map","get","history","push","document","getElementById","style","borderColor","innerHTML","password","name_change","bind","password_change","setState","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nlet users = new Map();\r\n\r\nusers.set(\"Danya2\", \"012340\");\r\nusers.set(\"Vlad4\", '012340');\r\nusers.set(\"Yaroslav6\", '012340');\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: '', password: \"\", users};\r\n\r\n        this.name_change = this.name_change.bind(this);\r\n        this.password_change = this.password_change.bind(this);\r\n\r\n        this.handle_submit = this.handle_submit.bind(this);\r\n    }\r\n\r\n    name_change(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    password_change(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    handle_submit = event => {\r\n        event.preventDefault();\r\n        if (!isNaN(parseInt(this.state.name.slice(-1))) &&\r\n            /^[a-zA-Z][a-zA-Z\\s]*$/.test(this.state.name.substring(0, this.state.name.length - 1)) &&\r\n            my_map.get(this.state.name)\r\n        )\r\n        {\r\n            this.props.history.push(\"/dashboard\");\r\n        } else {\r\n            document.getElementById(\"password\").style.borderColor = \"red\";\r\n            document.getElementById(\"login\").style.borderColor = \"red\";\r\n            document.getElementById(\"error\").innerHTML = \"Error. Your password or login is incorrect\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handle_submit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login\">Name</label>\r\n                    <input value={this.state.name} onChange={this.name_change} type=\"text\" className=\"form-control\" id=\"login\" placeholder=\"Enter login\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input value={this.state.password} onChange={this.password_change} type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" />\r\n                </div>\r\n                <p id=\"error\"></p>\r\n                <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}