{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SC298\\\\WebstormProjects\\\\react_lab\\\\src\\\\RegisterForm.js\";\nimport React, { Component } from \"react\";\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handle_submit = async event => {\n      event.preventDefault();\n\n      try {\n        await Auth.signIn(this.state.email, this.state.password);\n        this.props.userHasAuthenticated(true);\n        this.props.history.push(\"/\");\n      } catch (e) {\n        alert(e.message);\n      }\n    };\n\n    this.state = {\n      name: '',\n      password: \"\"\n    };\n    this.name_change = this.name_change.bind(this);\n    this.password_change = this.password_change.bind(this);\n    this.handle_submit = this.handle_submit.bind(this);\n  }\n\n  name_change(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  password_change(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    let str = this.state.name.substring(0, this.state.name.length - 1);\n\n    if (+this.state.name.slice(-1) != NaN && /^[a-zA-Z][a-zA-Z\\s]*$/.test(str)) {}\n\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handle_submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      value: this.state.name,\n      onChange: this.name_change,\n      type: \"text\",\n      className: \"form-control\",\n      id: \"exampleInputEmail1\",\n      \"aria-describedby\": \"emailHelp\",\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exampleInputPassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: this.password_change,\n      type: \"password\",\n      className: \"form-control\",\n      id: \"exampleInputPassword1\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["C:\\Users\\SC298\\WebstormProjects\\react_lab\\src\\RegisterForm.js"],"names":["React","Component","RegisterForm","constructor","props","handle_submit","event","preventDefault","Auth","signIn","state","email","password","userHasAuthenticated","history","push","e","alert","message","name","name_change","bind","password_change","setState","target","value","handleSubmit","str","substring","length","slice","NaN","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass RegisterForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {name: '', password: \"\"};\r\n\r\n        this.name_change = this.name_change.bind(this);\r\n        this.password_change = this.password_change.bind(this);\r\n\r\n        this.handle_submit = this.handle_submit.bind(this);\r\n    }\r\n\r\n    name_change(event) {\r\n        this.setState({name: event.target.value});\r\n    }\r\n\r\n    password_change(event) {\r\n        this.setState({password: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        let str = this.state.name.substring(0, this.state.name.length - 1);\r\n        if (+this.state.name.slice(-1) != NaN && /^[a-zA-Z][a-zA-Z\\s]*$/.test(str)) {\r\n\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    handle_submit = async event => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            await Auth.signIn(this.state.email, this.state.password);\r\n            this.props.userHasAuthenticated(true);\r\n            this.props.history.push(\"/\");\r\n        } catch (e) {\r\n            alert(e.message);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handle_submit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">Name</label>\r\n                    <input value={this.state.name} onChange={this.name_change} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                    <input value={this.state.password} onChange={this.password_change} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}