{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SC298\\\\WebstormProjects\\\\react_lab\\\\src\\\\DashBoard.js\";\nimport React, { Component } from \"react\";\n\nfunction Day(props) {\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: createImage(props.day.weather_state_name),\n    className: \"card-img-top\",\n    alt: \"Cloud\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.day.weather_state_name), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Date : \", props.day.weather_state_abbr), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Min temp : \", props.day.min_temp), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Max temp : \", props.day.the_temp), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Wind speed : \", parseFloat(props.day.wind_speed).toFixed(2)), React.createElement(\"p\", {\n    className: \"card-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Wind direction : \", parseFloat(props.day.wind_direction).toFixed(2))));\n}\n\nfunction createImage(name) {\n  switch (name) {\n    case \"Showers\":\n      return \"https://ssl.gstatic.com/onebox/weather/48/rain.png\";\n\n    case \"Light Rain\":\n      return \"https://ssl.gstatic.com/onebox/weather/48/rain_light.png\";\n\n    case \"Light Cloud\":\n      return \"https://ssl.gstatic.com/onebox/weather/48/sunny_s_cloudy.png\";\n\n    case \"Heavy Cloud\":\n      return \"https://ssl.gstatic.com/onebox/weather/48/partly_cloudy.png\";\n\n    default:\n      return \"https://ssl.gstatic.com/onebox/weather/48/rain_s_cloudy.png\";\n  }\n}\n\nclass DashBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: [],\n      inputLinkClicked: false,\n      index: 0\n    };\n  }\n\n  componentDidMount() {\n    const cors_api_url = 'https://cors-anywhere.herokuapp.com/';\n    fetch(cors_api_url + \"https://www.metaweather.com/api/location/924938/\", {\n      method: 'GET'\n    }).then(result => result.json()).then(data => {\n      document.getElementById(\"loader\").remove();\n      this.setState({\n        days: data.consolidated_weather,\n        inputLinkClicked: true\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"my_container\",\n      id: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loader\",\n      id: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), this.state.inputLinkClicked ? this.state.days.map(day => {\n      return React.createElement(Day, {\n        day: day,\n        key: day.ideal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DashBoard;","map":{"version":3,"sources":["C:\\Users\\SC298\\WebstormProjects\\react_lab\\src\\DashBoard.js"],"names":["React","Component","Day","props","createImage","day","weather_state_name","weather_state_abbr","min_temp","the_temp","parseFloat","wind_speed","toFixed","wind_direction","name","DashBoard","state","days","inputLinkClicked","index","componentDidMount","cors_api_url","fetch","method","then","result","json","data","document","getElementById","remove","setState","consolidated_weather","catch","error","console","log","render","map","ideal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n\r\nfunction Day(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={createImage(props.day.weather_state_name)} className=\"card-img-top\" alt=\"Cloud\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{props.day.weather_state_name}</h5>\r\n                <p className=\"card-text\">Date : {props.day.weather_state_abbr}</p>\r\n                <p className=\"card-text\">Min temp : {props.day.min_temp}</p>\r\n                <p className=\"card-text\">Max temp : {props.day.the_temp}</p>\r\n                <p className=\"card-text\">Wind speed : {parseFloat(props.day.wind_speed).toFixed(2)}</p>\r\n                <p className=\"card-text\">Wind direction : {parseFloat(props.day.wind_direction).toFixed(2)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction createImage(name) {\r\n    switch(name) {\r\n        case \"Showers\" : return \"https://ssl.gstatic.com/onebox/weather/48/rain.png\";\r\n        case \"Light Rain\" : return \"https://ssl.gstatic.com/onebox/weather/48/rain_light.png\";\r\n        case \"Light Cloud\" : return \"https://ssl.gstatic.com/onebox/weather/48/sunny_s_cloudy.png\";\r\n        case \"Heavy Cloud\" : return \"https://ssl.gstatic.com/onebox/weather/48/partly_cloudy.png\";\r\n        default : return \"https://ssl.gstatic.com/onebox/weather/48/rain_s_cloudy.png\";\r\n    }\r\n}\r\n\r\nclass DashBoard extends Component {\r\n\r\n    state = {\r\n        days: [],\r\n        inputLinkClicked: false,\r\n        index : 0\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const cors_api_url = 'https://cors-anywhere.herokuapp.com/';\r\n        fetch(cors_api_url + \"https://www.metaweather.com/api/location/924938/\", {\r\n                method: 'GET'\r\n            })\r\n            .then(result => result.json())\r\n            .then(data => {\r\n                document.getElementById(\"loader\").remove();\r\n                this.setState({\r\n                    days : data.consolidated_weather,\r\n                    inputLinkClicked: true\r\n                });\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"my_container\" id=\"container\">\r\n                <div className=\"loader\" id=\"loader\"></div>\r\n                {\r\n                    this.state.inputLinkClicked ?\r\n                        this.state.days.map(day => {\r\n                            return (\r\n                                <Day day={day} key={day.ideal} />\r\n                            )\r\n                        })\r\n                        :\r\n                        <div></div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashBoard;"]},"metadata":{},"sourceType":"module"}